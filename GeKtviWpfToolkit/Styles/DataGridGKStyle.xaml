
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:iconElements="http://schemas.lepo.co/wpfui/2022/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:tk="clr-namespace:GeKtviWpfToolkit.Controls"
    xmlns:tkES="clr-namespace:GeKtviWpfToolkit.Controls.ElementSelection">

    <sys:Double x:Key="MinRowHeight">22</sys:Double>
    <sys:Double x:Key="ContentMinHeight">20</sys:Double>

    <!--#region ElementSelectionTriggerInfo-->

    <x:Array x:Key="ElementSelectionTriggerInfoCollection" Type="tkES:ElementSelectionTriggerInfo">
        <tkES:ElementSelectionTriggerInfo VisualStateName="Normal_Selected">
            <tkES:ElementSelectionTriggerInfo.EnterAnimation>
                <DoubleAnimation
                    AccelerationRatio="0.5"
                    To="0.15"
                    Duration="0:0:0.15" />
            </tkES:ElementSelectionTriggerInfo.EnterAnimation>
            <tkES:ElementSelectionTriggerInfo.ExitAnimation>
                <DoubleAnimation DecelerationRatio="0.5" Duration="0:0:0.25" />
            </tkES:ElementSelectionTriggerInfo.ExitAnimation>
        </tkES:ElementSelectionTriggerInfo>

        <tkES:ElementSelectionTriggerInfo VisualStateName="MouseOver">
            <tkES:ElementSelectionTriggerInfo.EnterAnimation>
                <DoubleAnimation
                    AccelerationRatio="0.5"
                    To="0.1"
                    Duration="0:0:0.25" />
            </tkES:ElementSelectionTriggerInfo.EnterAnimation>
            <tkES:ElementSelectionTriggerInfo.ExitAnimation>
                <DoubleAnimation DecelerationRatio="0.5" Duration="0:0:0.25" />
            </tkES:ElementSelectionTriggerInfo.ExitAnimation>
        </tkES:ElementSelectionTriggerInfo>

        <tkES:ElementSelectionTriggerInfo VisualStateName="MouseOver_Selected">
            <tkES:ElementSelectionTriggerInfo.EnterAnimation>
                <DoubleAnimation
                    AccelerationRatio="0.5"
                    To="0.2"
                    Duration="0:0:0.25" />
            </tkES:ElementSelectionTriggerInfo.EnterAnimation>
            <tkES:ElementSelectionTriggerInfo.ExitAnimation>
                <DoubleAnimation DecelerationRatio="0.5" Duration="0:0:0.25" />
            </tkES:ElementSelectionTriggerInfo.ExitAnimation>
        </tkES:ElementSelectionTriggerInfo>

        <tkES:ElementSelectionTriggerInfo VisualStateName="Unfocused_Selected">
            <tkES:ElementSelectionTriggerInfo.EnterAnimation>
                <DoubleAnimation
                    AccelerationRatio="0.5"
                    To="0.1"
                    Duration="0:0:0.025" />
            </tkES:ElementSelectionTriggerInfo.EnterAnimation>
            <tkES:ElementSelectionTriggerInfo.ExitAnimation>
                <DoubleAnimation DecelerationRatio="0.5" Duration="0:0:0.25" />
            </tkES:ElementSelectionTriggerInfo.ExitAnimation>
        </tkES:ElementSelectionTriggerInfo>

        <tkES:ElementSelectionTriggerInfo VisualStateName="MouseOver_Unfocused_Selected">
            <tkES:ElementSelectionTriggerInfo.EnterAnimation>
                <DoubleAnimation
                    AccelerationRatio="0.5"
                    To="0.125"
                    Duration="0:0:0.25" />
            </tkES:ElementSelectionTriggerInfo.EnterAnimation>
            <tkES:ElementSelectionTriggerInfo.ExitAnimation>
                <DoubleAnimation DecelerationRatio="0.5" Duration="0:0:0.25" />
            </tkES:ElementSelectionTriggerInfo.ExitAnimation>
        </tkES:ElementSelectionTriggerInfo>

        <tkES:ElementSelectionTriggerInfo VisualStateName="Normal_Selected_Cell">
            <tkES:ElementSelectionTriggerInfo.EnterAnimation>
                <DoubleAnimation
                    AccelerationRatio="0.5"
                    To="0.9"
                    Duration="0:0:0.15" />
            </tkES:ElementSelectionTriggerInfo.EnterAnimation>
            <tkES:ElementSelectionTriggerInfo.ExitAnimation>
                <DoubleAnimation DecelerationRatio="0.5" Duration="0:0:0.25" />
            </tkES:ElementSelectionTriggerInfo.ExitAnimation>
        </tkES:ElementSelectionTriggerInfo>
    </x:Array>

    <!--#endregion-->

    <!--#region DataGridGKStyle-->

    <Style TargetType="tk:DataGridGK">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource DefaultDataGridColumnHeaderStyle}" />
        <Setter Property="RowHeaderStyle" Value="{StaticResource DefaultDataGridRowHeaderStyle}" />
        <Setter Property="RowStyle" Value="{StaticResource DefaultDataGridRowStyle}" />
        <Setter Property="CellStyle" Value="{StaticResource DefaultDataGridCellStyle}" />
        <Setter Property="tk:DataGridHelper.TextColumnElementStyle" Value="{DynamicResource DataGridTextBlockStyle}" />
        <Setter Property="tk:DataGridHelper.TextColumnEditingElementStyle" Value="{DynamicResource DataGridTextBoxStyle}" />
        <Setter Property="tk:DataGridHelper.TextColumnFontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="tk:DataGridHelper.CheckBoxColumnElementStyle" Value="{DynamicResource DataGridCheckBoxStyle}" />
        <Setter Property="tk:DataGridHelper.CheckBoxColumnEditingElementStyle" Value="{DynamicResource DataGridCheckBoxStyle}" />
        <!--<Setter Property="primitives:DataGridHelper.ComboBoxColumnElementStyle" Value="{DynamicResource DataGridTextBlockComboBoxStyle}" />
        <Setter Property="primitives:DataGridHelper.ComboBoxColumnEditingElementStyle" Value="{DynamicResource DataGridComboBoxStyle}" />
        <Setter Property="primitives:DataGridHelper.HyperlinkColumnElementStyle" Value="{DynamicResource DataGridTextBlockStyle}" />
        <Setter Property="primitives:DataGridHelper.HyperlinkColumnEditingElementStyle" Value="{DynamicResource DataGridTextBoxStyle}" />-->
        <!--<Setter Property="tk:DataGridHelper.IsAnimationEnabled" Value="True" />-->
        <Setter Property="tk:DataGridHelper.UseModernColumnStyles" Value="True" />
        <Setter Property="tk:DataGridHelper.IsEnabled" Value="True" />
        <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource ControlFillColorDefault}" />
            </Setter.Value>
        </Setter>
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
        <Setter Property="MinRowHeight" Value="{DynamicResource MinRowHeight}" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlElevationBorderBrush}" />
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource ControlElevationBorderBrush}" />
        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource ControlElevationBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FontSize" Value="{StaticResource DefaultDataGridFontSize}" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Border.CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGrid">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{DynamicResource ControlCornerRadius}"
                        SnapsToDevicePixels="True">

                        <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="ScrollViewer">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>

                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>

                                        <!--  Left Column Header Corner  -->
                                        <Button
                                            Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                            Command="{x:Static DataGrid.SelectAllCommand}"
                                            Focusable="false"
                                            Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle,
                                                                                          TypeInTargetAssembly={x:Type DataGrid}}}"
                                            Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />

                                        <!--  Column Headers  -->
                                        <DataGridColumnHeadersPresenter
                                            x:Name="PART_ColumnHeadersPresenter"
                                            Grid.Column="1"
                                            Grid.ColumnSpan="2"
                                            Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />

                                        <Rectangle
                                            x:Name="ColumnHeadersAndRowsSeparator"
                                            Grid.ColumnSpan="3"
                                            Width="Auto"
                                            Height="1"
                                            VerticalAlignment="Bottom"
                                            Fill="{DynamicResource GridLinesBrush}"
                                            StrokeThickness="1" />

                                        <!--  DataGrid content  -->
                                        <ScrollContentPresenter
                                            x:Name="PART_ScrollContentPresenter"
                                            Grid.Row="1"
                                            Grid.ColumnSpan="2"
                                            CanContentScroll="{TemplateBinding CanContentScroll}" />

                                        <ScrollBar
                                            x:Name="PART_VerticalScrollBar"
                                            Grid.Row="1"
                                            Grid.Column="2"
                                            Maximum="{TemplateBinding ScrollableHeight}"
                                            Orientation="Vertical"
                                            ViewportSize="{TemplateBinding ViewportHeight}"
                                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                            Value="{TemplateBinding VerticalOffset}" />

                                        <Grid Grid.Row="2" Grid.Column="1">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar
                                                x:Name="PART_HorizontalScrollBar"
                                                Grid.Column="1"
                                                Maximum="{TemplateBinding ScrollableWidth}"
                                                Orientation="Horizontal"
                                                ViewportSize="{TemplateBinding ViewportWidth}"
                                                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                Value="{TemplateBinding HorizontalOffset}" />
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <!--#endregion-->

    <!--#region DefaultDataGridCellStyle-->

    <Style x:Name="DefaultDataGridCellStyle" TargetType="DataGridCell">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="{DynamicResource DataGridCellBackgroundBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="MinHeight" Value="{DynamicResource DataGridRowMinHeight}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <Border Margin="1">
                        <Border x:Name="DGC_Border" CornerRadius="5">
                            <Border.Background>
                                <SolidColorBrush Opacity="0.0" Color="{DynamicResource SystemAccentColorSecondary}" />
                            </Border.Background>
                            <tk:DataGridCellPresenter
                                x:Name="DGC_Presenter"
                                MinHeight="{TemplateBinding MinHeight}"
                                Background="Transparent"
                                CurrencyVisualBrush="Transparent"
                                CurrencyVisualThickness="0"
                                FocusVisualPrimaryBrush="Transparent"
                                FocusVisualPrimaryThickness="0"
                                FocusVisualSecondaryBrush="Transparent"
                                FocusVisualSecondaryThickness="0"
                                IsCurrencyVisualVisible="{TemplateBinding IsSelected}"
                                IsFocusVisualVisible="{TemplateBinding IsKeyboardFocusWithin}"
                                SnapsToDevicePixels="True" />
                        </Border>
                    </Border>

                    <ControlTemplate.Triggers>

                        <tkES:ElementSelectionTrigger
                            ElementSelectionTriggerInfoCollection="{StaticResource ElementSelectionTriggerInfoCollection}"
                            ElementVisualState="Normal_Selected_Cell"
                            SourceName="DGC_Presenter"
                            TargetProperty="(Control.Background).(SolidColorBrush.Opacity)"
                            TargetName="DGC_Border"
                            Property="IsCurrencyVisualVisible"
                            Value="True" />

                        <tkES:ElementSelectionTrigger
                            ElementSelectionTriggerInfoCollection="{StaticResource ElementSelectionTriggerInfoCollection}"
                            ElementVisualState="Normal_Selected_Cell"
                            SourceName="DGC_Presenter"
                            TargetProperty="(Control.Background).(SolidColorBrush.Opacity)"
                            TargetName="DGC_Border"
                            Property="IsKeyboardFocusWithin"
                            Value="True" />

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region DataGridRowStyle-->

    <Style x:Key="DefaultDataGridRowStyle" TargetType="{x:Type DataGridRow}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Setter Property="ValidationErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock
                        Margin="2,0,0,0"
                        VerticalAlignment="Center"
                        Foreground="{DynamicResource SystemFillColorCriticalBrush}"
                        Text="!" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <ControlTemplate.Resources>
                        <SolidColorBrush
                            x:Key="GridElementBackground"
                            Opacity="0"
                            Color="{DynamicResource ControlFillColorSecondary}" />
                    </ControlTemplate.Resources>
                    <Border
                        x:Name="DGR_Border"
                        Margin="2,0,2,0"
                        BorderBrush="Transparent"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5"
                        SnapsToDevicePixels="True">
                        <Border.Background>
                            <SolidColorBrush Opacity="0.0" Color="{DynamicResource SystemFillColorNeutral}" />
                        </Border.Background>

                        <SelectiveScrollingGrid>
                            <SelectiveScrollingGrid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </SelectiveScrollingGrid.ColumnDefinitions>
                            <SelectiveScrollingGrid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </SelectiveScrollingGrid.RowDefinitions>
                            <DataGridCellsPresenter
                                Grid.Column="1"
                                ItemsPanel="{TemplateBinding ItemsPanel}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <DataGridDetailsPresenter
                                Grid.Row="1"
                                Grid.Column="1"
                                SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                Visibility="{TemplateBinding DetailsVisibility}" />
                            <DataGridRowHeader
                                Grid.Row="0"
                                Grid.RowSpan="2"
                                Grid.Column="0"
                                SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                        </SelectiveScrollingGrid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates1">
                                <tk:VisualStateGroupListener.Listener>
                                    <tk:VisualStateGroupListener x:Name="CommonStatesListener" />
                                </tk:VisualStateGroupListener.Listener>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Normal_AlternatingRow" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Normal_Selected" />
                                <VisualState x:Name="MouseOver_Selected" />
                                <VisualState x:Name="MouseOver_Unfocused_Selected" />
                                <VisualState x:Name="Unfocused_Selected" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>

                    <ControlTemplate.Triggers>

                        <tkES:ElementSelectionTrigger
                            ElementSelectionTriggerInfoCollection="{StaticResource ElementSelectionTriggerInfoCollection}"
                            ElementVisualState="Normal_Selected"
                            SourceName="CommonStatesListener"
                            TargetProperty="(Control.Background).(SolidColorBrush.Opacity)"
                            TargetName="DGR_Border"
                            Property="CurrentStateName"
                            Value="Normal_Selected" />

                        <tkES:ElementSelectionTrigger
                            ElementSelectionTriggerInfoCollection="{StaticResource ElementSelectionTriggerInfoCollection}"
                            ElementVisualState="MouseOver"
                            SourceName="CommonStatesListener"
                            TargetProperty="(Control.Background).(SolidColorBrush.Opacity)"
                            TargetName="DGR_Border"
                            Property="CurrentStateName"
                            Value="MouseOver" />

                        <tkES:ElementSelectionTrigger
                            ElementSelectionTriggerInfoCollection="{StaticResource ElementSelectionTriggerInfoCollection}"
                            ElementVisualState="MouseOver_Selected"
                            SourceName="CommonStatesListener"
                            TargetProperty="(Control.Background).(SolidColorBrush.Opacity)"
                            TargetName="DGR_Border"
                            Property="CurrentStateName"
                            Value="MouseOver_Selected" />

                        <tkES:ElementSelectionTrigger
                            ElementSelectionTriggerInfoCollection="{StaticResource ElementSelectionTriggerInfoCollection}"
                            ElementVisualState="Unfocused_Selected"
                            SourceName="CommonStatesListener"
                            TargetProperty="(Control.Background).(SolidColorBrush.Opacity)"
                            TargetName="DGR_Border"
                            Property="CurrentStateName"
                            Value="Unfocused_Selected" />

                        <tkES:ElementSelectionTrigger
                            ElementSelectionTriggerInfoCollection="{StaticResource ElementSelectionTriggerInfoCollection}"
                            ElementVisualState="MouseOver_Unfocused_Selected"
                            SourceName="CommonStatesListener"
                            TargetProperty="(Control.Background).(SolidColorBrush.Opacity)"
                            TargetName="DGR_Border"
                            Property="CurrentStateName"
                            Value="MouseOver_Unfocused_Selected" />

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region DataGridRowHeaderStyle-->

    <Style x:Key="DefaultDataGridRowHeaderStyle" TargetType="DataGridRowHeader">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="{DynamicResource DataGridRowHeaderBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource DataGridRowHeaderBackgroundBrush}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="SeparatorBrush" Value="{DynamicResource ControlElevationBorderBrush}" />
        <Setter Property="Padding" Value="12,0,7,0" />
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridRowHeader">
                    <Grid x:Name="RowHeaderRoot">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Border
                            Grid.RowSpan="3"
                            Grid.ColumnSpan="2"
                            BorderBrush="{TemplateBinding SeparatorBrush}"
                            BorderThickness="0,0,1,0">
                            <Grid Background="{TemplateBinding Background}">
                                <Rectangle
                                    x:Name="RowInvalidVisualElement"
                                    Fill="{DynamicResource DataGridRowInvalidBrush}"
                                    Opacity="0"
                                    Stretch="Fill" />
                                <Rectangle
                                    x:Name="BackgroundRectangle"
                                    Fill="Transparent"
                                    Stretch="Fill" />
                            </Grid>
                        </Border>

                        <Rectangle
                            x:Name="HorizontalSeparator"
                            Grid.Row="2"
                            Grid.ColumnSpan="2"
                            Height="1"
                            Margin="1,0,1,0"
                            HorizontalAlignment="Stretch"
                            Fill="{TemplateBinding SeparatorBrush}"
                            Visibility="{TemplateBinding SeparatorVisibility}" />

                        <ContentPresenter
                            Grid.RowSpan="2"
                            Grid.Column="1"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                        <Thumb
                            x:Name="PART_TopHeaderGripper"
                            Grid.RowSpan="3"
                            Grid.ColumnSpan="2"
                            VerticalAlignment="Top"
                            Style="{StaticResource RowHeaderGripperStyle}" />
                        <Thumb
                            x:Name="PART_BottomHeaderGripper"
                            Grid.RowSpan="3"
                            Grid.ColumnSpan="2"
                            VerticalAlignment="Bottom"
                            Style="{StaticResource RowHeaderGripperStyle}" />


                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <!--<primitives:VisualStateGroupListener.Listener>
                                    <primitives:VisualStateGroupListener x:Name="CommonStatesListener" />
                                </primitives:VisualStateGroupListener.Listener>-->
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Normal_CurrentRow">
                                    <!-- For optional row currency and editing glyphs
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="CurrentRowGlyph" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
                                        <DoubleAnimation Storyboard.TargetName="EditingRowGlyph" Storyboard.TargetProperty="Opacity" Duration="0" To="0"/>
                                    </Storyboard>
                                    -->
                                </VisualState>
                                <VisualState x:Name="Normal_Selected">
                                    <Storyboard>
                                        <!-- For optional row currency and editing glyphs
                                        <DoubleAnimation Storyboard.TargetName="CurrentRowGlyph" Storyboard.TargetProperty="Opacity" Duration="0" To="0"/>
                                        <DoubleAnimation Storyboard.TargetName="EditingRowGlyph" Storyboard.TargetProperty="Opacity" Duration="0" To="0"/>
                                        -->
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal_EditingRow">
                                    <!-- For optional row currency and editing glyphs
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="CurrentRowGlyph" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
                                        <DoubleAnimation Storyboard.TargetName="EditingRowGlyph" Storyboard.TargetProperty="Opacity" Duration="0" To="0"/>
                                    </Storyboard>
                                    -->
                                </VisualState>
                                <VisualState x:Name="Normal_CurrentRow_Selected">
                                    <Storyboard />
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <!-- For optional row currency and editing glyphs
                                        <DoubleAnimation Storyboard.TargetName="CurrentRowGlyph" Storyboard.TargetProperty="Opacity" Duration="0" To="0"/>
                                        <DoubleAnimation Storyboard.TargetName="EditingRowGlyph" Storyboard.TargetProperty="Opacity" Duration="0" To="0"/>
                                        -->
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver_CurrentRow" />
                                <VisualState x:Name="MouseOver_Unfocused_EditingRow" />
                                <VisualState x:Name="MouseOver_EditingRow" />
                                <VisualState x:Name="MouseOver_Unfocused_Selected" />
                                <VisualState x:Name="MouseOver_Unfocused_CurrentRow_Selected" />
                                <VisualState x:Name="MouseOver_CurrentRow_Selected">
                                    <Storyboard>
                                        <!-- For optional row currency and editing glyphs
                                        <DoubleAnimation Storyboard.TargetName="CurrentRowGlyph" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
                                        <DoubleAnimation Storyboard.TargetName="EditingRowGlyph" Storyboard.TargetProperty="Opacity" Duration="0" To="0"/>
                                        -->
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver_Selected" />
                                <VisualState x:Name="Unfocused_EditingRow" />
                                <VisualState x:Name="Unfocused_Selected" />
                                <VisualState x:Name="Unfocused_CurrentRow_Selected" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="RowValid" />
                                <VisualState x:Name="RowInvalid">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="BackgroundRectangle"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="RowInvalidVisualElement"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.4"
                                            Duration="0" />
                                        <!-- For optional row currency and editing glyphs
                                        <ColorAnimation Storyboard.TargetName="CurrentRowGlyph" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Duration="0" To="#FFDC000C"/>
                                        <ColorAnimation Storyboard.TargetName="CurrentRowGlyph" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Duration="0" To="#FFDC000C"/>
                                        <ColorAnimation Storyboard.TargetName="CurrentRowGlyph" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Duration="0" To="#FFDC000C"/>
                                        <ColorAnimation Storyboard.TargetName="EditingRowGlyph" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Duration="0" To="#FFDC000C"/>
                                        <ColorAnimation Storyboard.TargetName="EditingRowGlyph" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Duration="0" To="#FFDC000C"/>
                                        <ColorAnimation Storyboard.TargetName="EditingRowGlyph" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Duration="0" To="#FFDC000C"/>
                                        -->
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <!--<ControlTemplate.Triggers>
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="Normal_Selected">
                            <Setter TargetName="BackgroundRectangle" Property="Fill" Value="{DynamicResource DataGridRowSelectedBackground}" />
                            <Setter TargetName="BackgroundRectangle" Property="Opacity" Value="{DynamicResource DataGridRowSelectedBackgroundOpacity}" />
                        </Trigger>
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="Normal_CurrentRow_Selected">
                            <Setter TargetName="BackgroundRectangle" Property="Fill" Value="{DynamicResource DataGridRowSelectedBackground}" />
                            <Setter TargetName="BackgroundRectangle" Property="Opacity" Value="{DynamicResource DataGridRowSelectedBackgroundOpacity}" />
                        </Trigger>
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="MouseOver">
                            <Setter TargetName="BackgroundRectangle" Property="Fill" Value="{DynamicResource SystemControlHighlightListLowBrush}" />
                        </Trigger>
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="MouseOver_CurrentRow">
                            <Setter TargetName="BackgroundRectangle" Property="Fill" Value="{DynamicResource SystemControlHighlightListLowBrush}" />
                        </Trigger>
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="MouseOver_Unfocused_EditingRow">
                            <Setter TargetName="BackgroundRectangle" Property="Fill" Value="{DynamicResource SystemControlHighlightListLowBrush}" />
                        </Trigger>
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="MouseOver_EditingRow">
                            <Setter TargetName="BackgroundRectangle" Property="Fill" Value="{DynamicResource SystemControlHighlightListLowBrush}" />
                        </Trigger>
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="MouseOver_Unfocused_Selected">
                            <Setter TargetName="BackgroundRectangle" Property="Fill" Value="{DynamicResource DataGridRowSelectedHoveredUnfocusedBackground}" />
                            <Setter TargetName="BackgroundRectangle" Property="Opacity" Value="{DynamicResource DataGridRowSelectedHoveredUnfocusedBackgroundOpacity}" />
                        </Trigger>
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="MouseOver_Unfocused_CurrentRow_Selected">
                            <Setter TargetName="BackgroundRectangle" Property="Fill" Value="{DynamicResource DataGridRowSelectedHoveredUnfocusedBackground}" />
                            <Setter TargetName="BackgroundRectangle" Property="Opacity" Value="{DynamicResource DataGridRowSelectedHoveredUnfocusedBackgroundOpacity}" />
                        </Trigger>
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="MouseOver_CurrentRow_Selected">
                            <Setter TargetName="BackgroundRectangle" Property="Fill" Value="{DynamicResource DataGridRowSelectedHoveredBackground}" />
                            <Setter TargetName="BackgroundRectangle" Property="Opacity" Value="{DynamicResource DataGridRowSelectedHoveredBackgroundOpacity}" />
                        </Trigger>
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="MouseOver_Selected">
                            <Setter TargetName="BackgroundRectangle" Property="Fill" Value="{DynamicResource DataGridRowSelectedHoveredBackground}" />
                            <Setter TargetName="BackgroundRectangle" Property="Opacity" Value="{DynamicResource DataGridRowSelectedHoveredBackgroundOpacity}" />
                        </Trigger>
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="Unfocused_EditingRow">
                            <Setter TargetName="BackgroundRectangle" Property="Fill" Value="{DynamicResource DataGridRowSelectedBackground}" />
                        </Trigger>
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="Unfocused_Selected">
                            <Setter TargetName="BackgroundRectangle" Property="Fill" Value="{DynamicResource DataGridRowSelectedUnfocusedBackground}" />
                            <Setter TargetName="BackgroundRectangle" Property="Opacity" Value="{DynamicResource DataGridRowSelectedUnfocusedBackgroundOpacity}" />
                        </Trigger>
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="Unfocused_CurrentRow_Selected">
                            <Setter TargetName="BackgroundRectangle" Property="Fill" Value="{DynamicResource DataGridRowSelectedUnfocusedBackground}" />
                            <Setter TargetName="BackgroundRectangle" Property="Opacity" Value="{DynamicResource DataGridRowSelectedUnfocusedBackgroundOpacity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region RowHeaderGripperStyle-->

    <Style x:Key="RowHeaderGripperStyle" TargetType="Thumb">
        <Setter Property="Height" Value="2" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="SizeNS" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region DefaultDataGridColumnHeaderStyle-->

    <Style x:Key="DefaultDataGridColumnHeaderStyle" TargetType="DataGridColumnHeader">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource DataGridColumnHeaderForegroundBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="SeparatorBrush" Value="{DynamicResource ControlElevationBorderBrush}" />
        <Setter Property="Padding" Value="12,0,0,0" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridColumnHeader">
                    <Grid x:Name="ColumnHeaderRoot">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border
                            x:Name="CHR_Border"
                            Margin="1,1,1,2"
                            Background="Transparent"
                            CornerRadius="5" />

                        <Grid
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition
                                    x:Name="SortIconColumn"
                                    Width="Auto"
                                    MinWidth="32" />
                            </Grid.ColumnDefinitions>

                            <ContentPresenter
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <ContentPresenter.Resources>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                                    </Style>
                                </ContentPresenter.Resources>
                            </ContentPresenter>

                            <iconElements:SymbolIcon
                                x:Name="SortIcon"
                                Grid.Column="1"
                                MinWidth="0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RenderTransformOrigin="0.5, 0.5"
                                Symbol="ChevronDown24"
                                Visibility="Collapsed">
                                <iconElements:SymbolIcon.RenderTransform>
                                    <RotateTransform Angle="0" />
                                </iconElements:SymbolIcon.RenderTransform>
                                <iconElements:SymbolIcon.Foreground>
                                    <SolidColorBrush Color="{DynamicResource TextFillColorSecondary}" />
                                </iconElements:SymbolIcon.Foreground>
                            </iconElements:SymbolIcon>

                        </Grid>

                        <Rectangle
                            x:Name="VerticalSeparator"
                            Grid.Column="1"
                            Width="1"
                            VerticalAlignment="Stretch"
                            Fill="{TemplateBinding SeparatorBrush}"
                            Visibility="{TemplateBinding SeparatorVisibility}" />

                        <Rectangle
                            Width="Auto"
                            Height="1"
                            Margin="0,0,0,0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Bottom"
                            Fill="{TemplateBinding SeparatorBrush}" />

                        <Grid
                            x:Name="FocusVisual"
                            IsHitTestVisible="False"
                            Opacity="0">
                            <Rectangle
                                x:Name="FocusVisualPrimary"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Fill="Transparent"
                                IsHitTestVisible="False"
                                Stroke="{DynamicResource DataGridCellFocusVisualPrimaryBrush}"
                                StrokeThickness="2" />
                            <Rectangle
                                x:Name="FocusVisualSecondary"
                                Margin="2"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Fill="Transparent"
                                IsHitTestVisible="False"
                                Stroke="{DynamicResource DataGridCellFocusVisualSecondaryBrush}"
                                StrokeThickness="1" />
                        </Grid>

                        <Thumb
                            x:Name="PART_LeftHeaderGripper"
                            Grid.ColumnSpan="2"
                            HorizontalAlignment="Left"
                            Style="{StaticResource ColumnHeaderGripperStyle}" />
                        <Thumb
                            x:Name="PART_RightHeaderGripper"
                            Grid.ColumnSpan="2"
                            HorizontalAlignment="Right"
                            Style="{StaticResource ColumnHeaderGripperStyle}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="FocusVisual"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SortStates">
                                <VisualState x:Name="Unsorted" />
                                <VisualState x:Name="SortAscending">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SortIcon" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation
                                            Storyboard.TargetName="SortIcon"
                                            Storyboard.TargetProperty="(iconElements:SymbolIcon.RenderTransform).(RotateTransform.Angle)"
                                            From="0"
                                            To="180"
                                            Duration="00:00:00.167" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SortDescending">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SortIcon" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation
                                            Storyboard.TargetName="SortIcon"
                                            Storyboard.TargetProperty="(iconElements:SymbolIcon.RenderTransform).(RotateTransform.Angle)"
                                            From="180"
                                            To="0"
                                            Duration="00:00:00.167" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="SortDirection" Value="Ascending">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="SortIcon"
                                            Storyboard.TargetProperty="(iconElements:SymbolIcon.RenderTransform).(RotateTransform.Angle)"
                                            From="0"
                                            To="180"
                                            Duration="00:00:00.3167" />
                        -->
                        <!--<DoubleAnimation
                                            Storyboard.TargetName="SortIcon"
                                            Storyboard.TargetProperty="(Border.RenderTransform).(TranslateTransform.Y)"
                                            From="-90"
                                            To="0"
                                            Duration="00:00:00.167">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>-->
                        <!--
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="SortIcon"
                                            Storyboard.TargetProperty="(iconElements:SymbolIcon.RenderTransform).(RotateTransform.Angle)"
                                            From="180"
                                            To="0"
                                            Duration="00:00:00.3167" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>-->

                        <!--<Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundRectangle" Property="Fill" Value="{DynamicResource DataGridColumnHeaderHoveredBackgroundBrush}" />
                        </Trigger>-->
                        <!--<Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BackgroundRectangle" Property="Fill" Value="{DynamicResource DataGridColumnHeaderPressedBackgroundBrush}" />
                        </Trigger>-->
                        <Trigger Property="SortDirection" Value="{x:Null}">
                            <Setter TargetName="SortIconColumn" Property="MinWidth" Value="0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="CHR_Border" Property="Background" Value="{DynamicResource ControlFillColorSecondaryBrush}" />
                        </Trigger>
                        <!--<Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource ControlFillColorDisabledBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ControlStrokeColorDefaultBrush}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
                        </Trigger>-->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="CHR_Border" Property="Background" Value="{DynamicResource ControlFillColorTertiaryBrush}" />
                            <Setter TargetName="CHR_Border" Property="BorderBrush" Value="{DynamicResource ControlStrokeColorDefaultBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="SortDirection" Value="{x:Null}">
                <Setter Property="Padding" Value="12,0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--#endregion-->

    <!--#region DefaultDataGridColumnHeadersPresenterStyle-->

    <Style x:Key="DefaultDataGridColumnHeadersPresenterStyle" TargetType="DataGridColumnHeadersPresenter">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridColumnHeadersPresenter">
                    <Grid>
                        <DataGridColumnHeader
                            Name="PART_FillerColumnHeader"
                            IsHitTestVisible="False"
                            SeparatorVisibility="Collapsed" />
                        <ItemsPresenter />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultDataGridColumnHeadersPresenterStyle}" TargetType="DataGridColumnHeadersPresenter" />

    <!--#endregion-->

    <!--#region DataGridRowGroupContainerStyle-->

    <Style x:Key="DataGridRowGroupContainerStyle" TargetType="GroupItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GroupItem">
                    <Expander
                        x:Name="PART_Header"
                        FontSize="{DynamicResource ControlContentThemeFontSize}"
                        Foreground="{DynamicResource DataGridRowGroupHeaderForegroundBrush}"
                        Header="{TemplateBinding Content}"
                        HeaderStringFormat="{TemplateBinding ContentStringFormat}"
                        HeaderTemplate="{TemplateBinding ContentTemplate}"
                        HeaderTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                        IsExpanded="True">
                        <Expander.Template>
                            <ControlTemplate TargetType="Expander">
                                <Border
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="true">
                                    <DockPanel>
                                        <ToggleButton
                                            x:Name="HeaderSite"
                                            MinWidth="0"
                                            MinHeight="{DynamicResource DataGridRowMinHeight}"
                                            Padding="{TemplateBinding Padding}"
                                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Content="{TemplateBinding Header}"
                                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                                            ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                            DockPanel.Dock="Top"
                                            FocusVisualStyle="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}"
                                            FontFamily="{TemplateBinding FontFamily}"
                                            FontSize="{TemplateBinding FontSize}"
                                            FontStretch="{TemplateBinding FontStretch}"
                                            FontStyle="{TemplateBinding FontStyle}"
                                            FontWeight="{TemplateBinding FontWeight}"
                                            Foreground="{TemplateBinding Foreground}"
                                            IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                            Style="{StaticResource DataGridRowGroupHeaderStyle}" />
                                        <ContentPresenter
                                            x:Name="ExpandSite"
                                            Margin="{TemplateBinding Padding}"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            DockPanel.Dock="Bottom"
                                            Focusable="false"
                                            Visibility="Collapsed" />
                                    </DockPanel>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsExpanded" Value="true">
                                        <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Expander.Template>
                        <ItemsPresenter x:Name="ItemsPresenter" />
                    </Expander>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region DataGridTextBlockStyle-->

    <Style x:Key="DataGridTextBlockStyle" TargetType="TextBlock">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="12,0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Style.Resources>
            <Style TargetType="Hyperlink">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="TextDecorations" Value="Underline" />

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Foreground" Value="{DynamicResource SystemControlHyperlinkBaseMediumBrush}" />
                    </Trigger>

                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="{DynamicResource SystemControlDisabledBaseMediumLowBrush}" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="true">
                        <Setter Property="Cursor" Value="Hand" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
    </Style>

    <!--#endregion-->

    <!--#region DataGridTextBoxStyle-->

    <Style
        x:Key="DataGridTextBoxStyle"
        BasedOn="{StaticResource DefaultTextBoxStyle}"
        TargetType="TextBox">
        <Setter Property="MinHeight" Value="{DynamicResource ContentMinHeight}" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="Padding" Value="9,-1,6,0" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
    </Style>

    <!--#endregion-->

    <!--#region DataGridCheckBoxStyle-->

    <Style
        x:Key="DataGridCheckBoxStyle"
        BasedOn="{StaticResource DefaultCheckBoxStyle}"
        TargetType="CheckBox">
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="MinWidth" Value="22" />
        <Setter Property="MinHeight" Value="22" />
        <Setter Property="Width" Value="22" />
        <Setter Property="Height" Value="22" />

        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>

    <!--#endregion-->

    <!--#region ColumnHeaderGripperStyle-->

    <Style x:Key="ColumnHeaderGripperStyle" TargetType="Thumb">
        <Setter Property="Width" Value="2" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="SizeWE" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region DataGridSelectAllButtonStyle-->

    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type DataGrid}, ResourceId=DataGridSelectAllButtonStyle}" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource ControlElevationBorderBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlElevationBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border
                            x:Name="AllButton_Border"
                            Margin="1,1,1,2"
                            CornerRadius="5" />
                        <Rectangle
                            x:Name="BackgroundRectangle"
                            Fill="{TemplateBinding Background}"
                            SnapsToDevicePixels="True" />
                        <Rectangle
                            Width="1"
                            HorizontalAlignment="Right"
                            Fill="{TemplateBinding BorderBrush}" />
                        <Rectangle
                            Width="Auto"
                            Height="1"
                            Margin="3,0,0,0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Bottom"
                            Fill="{TemplateBinding BorderBrush}" />
                        <Polygon
                            x:Name="Arrow"
                            Margin="8,8,3,3"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Bottom"
                            Fill="{TemplateBinding Foreground}"
                            Points="0,10 10,10 10,0"
                            Stretch="Uniform" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundRectangle" Property="Fill" Value="{DynamicResource DataGridColumnHeaderHoveredBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BackgroundRectangle" Property="Fill" Value="{DynamicResource DataGridColumnHeaderPressedBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Arrow" Property="Visibility" Value="Collapsed" />
                        </Trigger>-->




                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="AllButton_Border" Property="Background" Value="{DynamicResource ControlFillColorSecondaryBrush}" />
                        </Trigger>
                        <!--<Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource ControlFillColorDisabledBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ControlStrokeColorDefaultBrush}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
                        </Trigger>-->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="AllButton_Border" Property="Background" Value="{DynamicResource ControlFillColorTertiaryBrush}" />
                            <Setter TargetName="AllButton_Border" Property="BorderBrush" Value="{DynamicResource ControlStrokeColorDefaultBrush}" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

</ResourceDictionary>
